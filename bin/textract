#!/usr/bin/env node
'use strict';

var path = require( 'path' )
  , fs = require( 'fs' )
  , meow = require( 'meow' )
  , help = 'Usage:\n' +
           '  textract pathToFile\n\n' +
           'Flags:\n' +
           '  preserveLineBreaks: true/false (default: true)\n' +
           '  stripOnlySingleineBreaks: true/false (default: false)\n' +
           '  exec.?: allows for passing in node exec parameters, http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback\n' +
           '  [ext].exec.?: allows for passing in node exec parameters for just a single extension\n' +
           '  tesseract.lang: A pass-through to tesseract allowing for setting of language for extraction\n\n' +
           '  tesseract.cmd: tesseract.lang allows a quick means to provide the most popular tesseract option, but if you need to configure more options, you can simply pass cmd. cmd is the string that matches the command-line options you want to pass to tesseract. For instance, to provide language and psm, you would pass { tesseract: { cmd:"-l chi_sim -psm 10" } }\n' +
           '  pdftotextOptions: This is a proxy options object to the library textract uses for pdf extraction\n' +
           '  typeOverride: Used with fromUrl, if set, rather than using the content-type from the URL request, will use the provided typeOverride.' +
           'Example:\n' +
           '  textract test/files/huge.docx --exec.maxBuffer 500000 --preserveLineBreaks false\n'

var cli = meow({
  help: help,
  pkg: '../package.json'
});

if ( !cli.input || cli.input.length === 0 ) {
  console.log( '\n' + help );
} else {
  var lib = path.join( path.dirname( fs.realpathSync( __filename ) ), '..', 'lib', 'cli.js' );
  var textract = require( lib );
  textract( cli.input[0], cli.flags );
}
